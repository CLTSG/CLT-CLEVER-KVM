name: Manual Build

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build for'
        required: true
        default: 'ubuntu-22.04'
        type: choice
        options:
        - ubuntu-22.04
        - windows-latest
        - macos-latest
      debug:
        description: 'Build in debug mode'
        required: false
        default: false
        type: boolean

jobs:
  build:
    runs-on: ${{ inputs.platform }}
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ inputs.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Cache vcpkg (Windows only)
        if: inputs.platform == 'windows-latest'
        uses: actions/cache@v4
        with:
          path: C:\vcpkg
          key: vcpkg-${{ runner.os }}-${{ hashFiles('**/vcpkg.json') }}
          restore-keys: |
            vcpkg-${{ runner.os }}-

      - name: Install dependencies (ubuntu only)
        if: inputs.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libgtk-3-dev libxdo-dev libxrandr-dev libxcb-randr0-dev
          sudo apt-get install -y ffmpeg libavcodec-dev libavformat-dev libavutil-dev libavdevice-dev libavfilter-dev libswscale-dev libswresample-dev pkg-config
          # Verify installation
          pkg-config --modversion libavutil
          pkg-config --libs libavutil

      - name: Install dependencies (macOS only)
        if: inputs.platform == 'macos-latest'
        run: |
          brew install ffmpeg pkg-config
          # Verify installation
          pkg-config --modversion libavutil
          pkg-config --libs libavutil

      - name: Install dependencies (Windows only)
        if: inputs.platform == 'windows-latest'
        run: |
          # Check if vcpkg is cached, if not install it
          if (-not (Test-Path "C:\vcpkg\vcpkg.exe")) {
            Write-Host "Installing vcpkg..."
            git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
            cd C:\vcpkg
            .\bootstrap-vcpkg.bat
            .\vcpkg.exe integrate install
          } else {
            Write-Host "Using cached vcpkg installation"
            cd C:\vcpkg
          }
          # Install ffmpeg with all required components
          .\vcpkg.exe install ffmpeg[avcodec,avformat,avdevice,avfilter,swresample,swscale]:x64-windows
          # Set environment variables
          echo "VCPKG_ROOT=C:\vcpkg" >> $env:GITHUB_ENV
          echo "PKG_CONFIG_PATH=C:\vcpkg\installed\x64-windows\lib\pkgconfig" >> $env:GITHUB_ENV
          # Verify installation
          Get-ChildItem "C:\vcpkg\installed\x64-windows\lib\pkgconfig\libav*.pc" | Select-Object Name

      - name: Install frontend dependencies
        run: npm ci

      - name: Build the app (Release)
        if: ${{ !inputs.debug }}
        env:
          PKG_CONFIG_ALLOW_SYSTEM_LIBS: 1
          PKG_CONFIG_ALLOW_SYSTEM_CFLAGS: 1
        run: npm run tauri:build

      - name: Build the app (Debug)
        if: ${{ inputs.debug }}
        env:
          PKG_CONFIG_ALLOW_SYSTEM_LIBS: 1
          PKG_CONFIG_ALLOW_SYSTEM_CFLAGS: 1
        run: npm run tauri:build:debug

      - name: Upload artifacts (Linux)
        if: inputs.platform == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: clever-kvm-linux
          path: |
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/appimage/*.AppImage
            src-tauri/target/release/clever-kvm

      - name: Upload artifacts (Windows)
        if: inputs.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: clever-kvm-windows
          path: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe
            src-tauri/target/release/clever-kvm.exe

      - name: Upload artifacts (macOS)
        if: inputs.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: clever-kvm-macos
          path: |
            src-tauri/target/universal-apple-darwin/release/bundle/dmg/*.dmg
            src-tauri/target/universal-apple-darwin/release/bundle/macos/*.app
            src-tauri/target/universal-apple-darwin/release/clever-kvm
