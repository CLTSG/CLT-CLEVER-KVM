name: Build macOS Universal (Debug)

on:
  workflow_dispatch:
    inputs:
      debug_build:
        description: 'Enable debug mode for macOS universal build'
        required: false
        type: boolean
        default: true

jobs:
  test-macos-build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: 'aarch64-apple-darwin,x86_64-apple-darwin'

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install dependencies
        run: |
          brew install ffmpeg pkg-config
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_SYSTEM_LIBS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1" >> $GITHUB_ENV
          echo "MACOSX_DEPLOYMENT_TARGET=10.13" >> $GITHUB_ENV

      - name: Install frontend dependencies
        run: npm ci

      - name: Test 1 - Universal build with FFmpeg
        id: universal-with-ffmpeg
        continue-on-error: true
        run: |
          echo "Attempting universal build with FFmpeg..."
          npm run tauri build -- --target universal-apple-darwin

      - name: Test 2 - Universal build without FFmpeg
        if: steps.universal-with-ffmpeg.outcome == 'failure'
        id: universal-without-ffmpeg
        continue-on-error: true
        run: |
          echo "Attempting universal build without FFmpeg..."
          npm run tauri build -- --target universal-apple-darwin --no-default-features --features custom-protocol

      - name: Test 3 - Separate x86_64 build
        if: steps.universal-without-ffmpeg.outcome == 'failure'
        id: x86-build
        continue-on-error: true
        run: |
          echo "Attempting x86_64 build..."
          npm run tauri build -- --target x86_64-apple-darwin

      - name: Test 4 - Separate aarch64 build
        if: steps.x86-build.outcome == 'success'
        id: arm-build
        continue-on-error: true
        run: |
          echo "Attempting aarch64 build..."
          npm run tauri build -- --target aarch64-apple-darwin

      - name: Debug Info
        run: |
          echo "Build Results:"
          echo "Universal with FFmpeg: ${{ steps.universal-with-ffmpeg.outcome }}"
          echo "Universal without FFmpeg: ${{ steps.universal-without-ffmpeg.outcome }}"
          echo "x86_64 build: ${{ steps.x86-build.outcome }}"
          echo "aarch64 build: ${{ steps.arm-build.outcome }}"
          
          echo "FFmpeg Installation:"
          pkg-config --modversion libavutil || echo "libavutil not found"
          pkg-config --libs libavutil || echo "libavutil libs not found"
          
          echo "Available Rust targets:"
          rustup target list --installed
          
          echo "Generated files:"
          find src-tauri/target -name "*.app" -o -name "*.dmg" -o -name "*.pkg" 2>/dev/null || echo "No build artifacts found"

      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: macos-debug-build-${{ github.run_number }}
          path: |
            src-tauri/target/*/bundle/
            src-tauri/target/*/build/*/out/
          retention-days: 7
